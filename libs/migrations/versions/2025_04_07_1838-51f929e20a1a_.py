"""

Revision ID: 51f929e20a1a
Revises:
Create Date: 2025-04-07 18:38:26.646113

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "51f929e20a1a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "food_categories",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_food_categories_name"), "food_categories", ["name"], unique=False)
    op.create_table(
        "supplement_categories",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_supplement_categories_name"), "supplement_categories", ["name"], unique=False)
    op.create_table(
        "users",
        sa.Column("username", sa.String(length=150), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("password_hash", sa.String(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_verified", sa.Boolean(), nullable=True),
        sa.Column("role", sa.String(length=50), nullable=True),
        sa.Column("first_name", sa.String(length=100), nullable=True),
        sa.Column("last_name", sa.String(length=100), nullable=True),
        sa.Column("date_of_birth", sa.DateTime(), nullable=True),
        sa.Column("profile_picture", sa.String(length=255), nullable=True),
        sa.Column("gender", sa.String(length=10), nullable=True),
        sa.Column("height", sa.Integer(), nullable=True),
        sa.Column("body_tracker_period", sa.String(length=20), nullable=True),
        sa.Column("language", sa.String(length=10), nullable=True),
        sa.Column("referral_code", sa.String(length=50), nullable=True),
        sa.Column("country", sa.String(length=100), nullable=True),
        sa.Column("city", sa.String(length=100), nullable=True),
        sa.Column("address", sa.String(length=255), nullable=True),
        sa.Column("phone_number", sa.String(length=20), nullable=True),
        sa.Column("timezone", sa.String(length=100), nullable=True),
        sa.Column("preferences", sa.JSON(), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.Column("reset_token", sa.String(length=255), nullable=True),
        sa.Column("reset_token_expiry", sa.DateTime(), nullable=True),
        sa.Column("package_type", sa.String(length=50), nullable=True),
        sa.Column("subscription_start", sa.DateTime(), nullable=True),
        sa.Column("subscription_end", sa.DateTime(), nullable=True),
        sa.Column("billing_period", sa.String(length=20), nullable=True),
        sa.Column("auto_renew", sa.Boolean(), nullable=True),
        sa.Column("usage_limit", sa.Integer(), nullable=True),
        sa.Column("storage_limit", sa.Integer(), nullable=True),
        sa.Column("package_features", sa.JSON(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "workout_categories",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_workout_categories_name"), "workout_categories", ["name"], unique=False)
    op.create_table(
        "body_trackers",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("weight", sa.Float(), nullable=True),
        sa.Column("neck", sa.Float(), nullable=True),
        sa.Column("waist", sa.Float(), nullable=True),
        sa.Column("shoulder", sa.Float(), nullable=True),
        sa.Column("chest", sa.Float(), nullable=True),
        sa.Column("hip", sa.Float(), nullable=True),
        sa.Column("thigh", sa.Float(), nullable=True),
        sa.Column("arm", sa.Float(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_body_trackers_user_id"), "body_trackers", ["user_id"], unique=False)
    op.create_table(
        "daily_trackers",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("energy", sa.Integer(), nullable=True),
        sa.Column("sleep", sa.Integer(), nullable=True),
        sa.Column("stress", sa.Integer(), nullable=True),
        sa.Column("muscle_soreness", sa.Integer(), nullable=True),
        sa.Column("fatigue", sa.Integer(), nullable=True),
        sa.Column("hunger", sa.Integer(), nullable=True),
        sa.Column("water_intake_liters", sa.Float(), nullable=True),
        sa.Column("sleep_hours", sa.Float(), nullable=True),
        sa.Column("mood", sa.String(length=50), nullable=True),
        sa.Column("bowel_movement", sa.String(length=50), nullable=True),
        sa.Column("training_quality", sa.Integer(), nullable=True),
        sa.Column("diet_compliance", sa.Integer(), nullable=True),
        sa.Column("training_compliance", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_daily_trackers_user_id"), "daily_trackers", ["user_id"], unique=False)
    op.create_table(
        "diet_plans",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("goal", sa.String(length=100), nullable=True),
        sa.Column("duration_days", sa.Integer(), nullable=True),
        sa.Column("daily_calories", sa.Float(), nullable=True),
        sa.Column("protein_target", sa.Float(), nullable=True),
        sa.Column("carbs_target", sa.Float(), nullable=True),
        sa.Column("fat_target", sa.Float(), nullable=True),
        sa.Column("is_public", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_diet_plans_name"), "diet_plans", ["name"], unique=False)
    op.create_table(
        "foods",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("category_id", sa.Integer(), nullable=True),
        sa.Column("calories", sa.Float(), nullable=True),
        sa.Column("protein", sa.Float(), nullable=True),
        sa.Column("carbs", sa.Float(), nullable=True),
        sa.Column("fat", sa.Float(), nullable=True),
        sa.Column("fiber", sa.Float(), nullable=True),
        sa.Column("sugar", sa.Float(), nullable=True),
        sa.Column("serving_size", sa.Float(), nullable=True),
        sa.Column("serving_unit", sa.String(length=20), nullable=True),
        sa.Column("image_url", sa.String(length=255), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("is_custom", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["food_categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_foods_name"), "foods", ["name"], unique=False)
    op.create_table(
        "meal_templates",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("meal_type", sa.String(length=50), nullable=False),
        sa.Column("is_favorite", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_meal_templates_name"), "meal_templates", ["name"], unique=False)
    op.create_table(
        "supplements",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("category_id", sa.Integer(), nullable=True),
        sa.Column("brand", sa.String(length=100), nullable=True),
        sa.Column("recommended_dosage", sa.Float(), nullable=True),
        sa.Column("dosage_unit", sa.String(length=20), nullable=True),
        sa.Column("benefits", sa.Text(), nullable=True),
        sa.Column("side_effects", sa.Text(), nullable=True),
        sa.Column("image_url", sa.String(length=255), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("is_custom", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["supplement_categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_supplements_name"), "supplements", ["name"], unique=False)
    op.create_table(
        "workout_programs",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("group_name", sa.String(length=100), nullable=True),
        sa.Column("difficulty_level", sa.String(length=20), nullable=True),
        sa.Column("duration_weeks", sa.Integer(), nullable=True),
        sa.Column("goal", sa.String(length=100), nullable=True),
        sa.Column("is_public", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_workout_programs_group_name"), "workout_programs", ["group_name"], unique=False)
    op.create_index(op.f("ix_workout_programs_name"), "workout_programs", ["name"], unique=False)
    op.create_table(
        "workouts",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("category_id", sa.Integer(), nullable=True),
        sa.Column("difficulty_level", sa.String(length=20), nullable=True),
        sa.Column("equipment_needed", sa.String(length=255), nullable=True),
        sa.Column("muscle_groups", sa.String(length=255), nullable=True),
        sa.Column("instructions", sa.Text(), nullable=True),
        sa.Column("video_url", sa.String(length=255), nullable=True),
        sa.Column("image_url", sa.String(length=255), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("is_custom", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["workout_categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_workouts_name"), "workouts", ["name"], unique=False)
    op.create_table(
        "diet_plan_food",
        sa.Column("diet_plan_id", sa.Integer(), nullable=False),
        sa.Column("food_id", sa.Integer(), nullable=False),
        sa.Column("meal_type", sa.String(length=50), nullable=True),
        sa.Column("portion_size", sa.Float(), nullable=True),
        sa.Column("portion_unit", sa.String(length=20), nullable=True),
        sa.Column("day_number", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["diet_plan_id"],
            ["diet_plans.id"],
        ),
        sa.ForeignKeyConstraint(
            ["food_id"],
            ["foods.id"],
        ),
        sa.PrimaryKeyConstraint("diet_plan_id", "food_id"),
    )
    op.create_table(
        "diet_plan_supplement",
        sa.Column("diet_plan_id", sa.Integer(), nullable=False),
        sa.Column("supplement_id", sa.Integer(), nullable=False),
        sa.Column("dosage", sa.Float(), nullable=True),
        sa.Column("dosage_unit", sa.String(length=20), nullable=True),
        sa.Column("time_of_day", sa.String(length=50), nullable=True),
        sa.Column("day_number", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["diet_plan_id"],
            ["diet_plans.id"],
        ),
        sa.ForeignKeyConstraint(
            ["supplement_id"],
            ["supplements.id"],
        ),
        sa.PrimaryKeyConstraint("diet_plan_id", "supplement_id"),
    )
    op.create_table(
        "meal_template_foods",
        sa.Column("meal_template_id", sa.Integer(), nullable=False),
        sa.Column("food_id", sa.Integer(), nullable=False),
        sa.Column("portion_size", sa.Float(), nullable=False),
        sa.Column("portion_unit", sa.String(length=20), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["food_id"],
            ["foods.id"],
        ),
        sa.ForeignKeyConstraint(
            ["meal_template_id"],
            ["meal_templates.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "workout_program_days",
        sa.Column("program_id", sa.Integer(), nullable=False),
        sa.Column("day_number", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["program_id"],
            ["workout_programs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "workout_sets",
        sa.Column("workout_id", sa.Integer(), nullable=False),
        sa.Column("set_number", sa.Integer(), nullable=False),
        sa.Column("reps", sa.Integer(), nullable=True),
        sa.Column("weight", sa.Float(), nullable=True),
        sa.Column("duration_seconds", sa.Integer(), nullable=True),
        sa.Column("rest_seconds", sa.Integer(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["workout_id"],
            ["workouts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "workout_program_day_workout",
        sa.Column("workout_program_day_id", sa.Integer(), nullable=False),
        sa.Column("workout_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["workout_id"],
            ["workouts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workout_program_day_id"],
            ["workout_program_days.id"],
        ),
        sa.PrimaryKeyConstraint("workout_program_day_id", "workout_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("workout_program_day_workout")
    op.drop_table("workout_sets")
    op.drop_table("workout_program_days")
    op.drop_table("meal_template_foods")
    op.drop_table("diet_plan_supplement")
    op.drop_table("diet_plan_food")
    op.drop_index(op.f("ix_workouts_name"), table_name="workouts")
    op.drop_table("workouts")
    op.drop_index(op.f("ix_workout_programs_name"), table_name="workout_programs")
    op.drop_index(op.f("ix_workout_programs_group_name"), table_name="workout_programs")
    op.drop_table("workout_programs")
    op.drop_index(op.f("ix_supplements_name"), table_name="supplements")
    op.drop_table("supplements")
    op.drop_index(op.f("ix_meal_templates_name"), table_name="meal_templates")
    op.drop_table("meal_templates")
    op.drop_index(op.f("ix_foods_name"), table_name="foods")
    op.drop_table("foods")
    op.drop_index(op.f("ix_diet_plans_name"), table_name="diet_plans")
    op.drop_table("diet_plans")
    op.drop_index(op.f("ix_daily_trackers_user_id"), table_name="daily_trackers")
    op.drop_table("daily_trackers")
    op.drop_index(op.f("ix_body_trackers_user_id"), table_name="body_trackers")
    op.drop_table("body_trackers")
    op.drop_index(op.f("ix_workout_categories_name"), table_name="workout_categories")
    op.drop_table("workout_categories")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_supplement_categories_name"), table_name="supplement_categories")
    op.drop_table("supplement_categories")
    op.drop_index(op.f("ix_food_categories_name"), table_name="food_categories")
    op.drop_table("food_categories")
    # ### end Alembic commands ###
