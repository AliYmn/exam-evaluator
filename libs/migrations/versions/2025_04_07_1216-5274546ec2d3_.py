"""

Revision ID: 5274546ec2d3
Revises:
Create Date: 2025-04-07 12:16:41.440129

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "5274546ec2d3"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("username", sa.String(length=150), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("password_hash", sa.String(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_verified", sa.Boolean(), nullable=True),
        sa.Column("role", sa.String(length=50), nullable=True),
        sa.Column("first_name", sa.String(length=100), nullable=True),
        sa.Column("last_name", sa.String(length=100), nullable=True),
        sa.Column("date_of_birth", sa.DateTime(), nullable=True),
        sa.Column("profile_picture", sa.String(length=255), nullable=True),
        sa.Column("gender", sa.String(length=10), nullable=True),
        sa.Column("language", sa.String(length=10), nullable=True),
        sa.Column("referral_code", sa.String(length=50), nullable=True),
        sa.Column("country", sa.String(length=100), nullable=True),
        sa.Column("city", sa.String(length=100), nullable=True),
        sa.Column("address", sa.String(length=255), nullable=True),
        sa.Column("phone_number", sa.String(length=20), nullable=True),
        sa.Column("timezone", sa.String(length=100), nullable=True),
        sa.Column("preferences", sa.JSON(), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.Column("reset_token", sa.String(length=255), nullable=True),
        sa.Column("reset_token_expiry", sa.DateTime(), nullable=True),
        sa.Column("package_type", sa.String(length=50), nullable=True),
        sa.Column("subscription_start", sa.DateTime(), nullable=True),
        sa.Column("subscription_end", sa.DateTime(), nullable=True),
        sa.Column("billing_period", sa.String(length=20), nullable=True),
        sa.Column("auto_renew", sa.Boolean(), nullable=True),
        sa.Column("usage_limit", sa.Integer(), nullable=True),
        sa.Column("storage_limit", sa.Integer(), nullable=True),
        sa.Column("package_features", sa.JSON(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "body_trackers",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("data", sa.JSON(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_body_trackers_user_id"), "body_trackers", ["user_id"], unique=False)
    op.create_table(
        "diets",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("data", sa.JSON(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_diets_user_id"), "diets", ["user_id"], unique=False)
    op.create_table(
        "diet_trackers",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("diet_id", sa.Integer(), nullable=False),
        sa.Column("is_compliant", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_date", sa.DateTime(), nullable=True),
        sa.Column("deleted_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["diet_id"],
            ["diets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_diet_trackers_diet_id"), "diet_trackers", ["diet_id"], unique=False)
    op.create_index(op.f("ix_diet_trackers_user_id"), "diet_trackers", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_diet_trackers_user_id"), table_name="diet_trackers")
    op.drop_index(op.f("ix_diet_trackers_diet_id"), table_name="diet_trackers")
    op.drop_table("diet_trackers")
    op.drop_index(op.f("ix_diets_user_id"), table_name="diets")
    op.drop_table("diets")
    op.drop_index(op.f("ix_body_trackers_user_id"), table_name="body_trackers")
    op.drop_table("body_trackers")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
